'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _templateObject = _taggedTemplateLiteral(['\n\tdirective @cacheControl(\n\t\tmaxAge: Int,\n\t\tscope: CacheControlScope\n\t) on OBJECT | FIELD_DEFINITION\n\n\tenum CacheControlScope {\n\t\tPUBLIC\n\t\tPRIVATE\n\t}\n\t\n\tunion Results = User | Post\n\n  extend type Query {\n    users: [User!]\n    user(id: ID!): User\n    me: User\n\t\tsearch(query: String!): [Results]\n  }\n\n\textend type Mutation {\n\t\tsignUp(\n\t\t\tusername: String!\n\t\t\temail: String!\n\t\t\tpassword: String!\n\t\t): Token!\n\n\t\tsignIn(login: String!, password: String!): Token!\n\n\t\tfollowUser(userId: ID!): Boolean!\n\t\tunfollowUser(userId: ID!): Boolean!\n\n\t\tlikePost(postId: ID!): Boolean!\n\n\t\tupdateAvatar(file: Upload!): Boolean!\n\n\t\tupdateBio(text: String!): Boolean!\n\n\t\tupdateUser(bio: String, name: String, username: String): Boolean!\n\n\t}\n\n\ttype Token {\n\t\ttoken: String!\n\t}\n\n\ttype Relationship {\n\t\tfollower_id: ID!\n\t\tfollowed_id: ID!\n\t}\n\n  type User @cacheControl(maxAge: 240) {\n    id: ID!\n    username: String! \n\t\temail: String! @cacheControl(maxAge: 240)\n\t\tposts(limit: Int, offset: Int): [Post!]\n\t\tposts_count: Int \n\t\tavatar: String\n\t\tbio: String\n    messages: [Message!]\n\t\tfollowing: Boolean\n\t\tfollowing_count: Int\n\t\tfollowers_count: Int\n\t\tfollowers_array: [ID]\n  }\n\n'], ['\n\tdirective @cacheControl(\n\t\tmaxAge: Int,\n\t\tscope: CacheControlScope\n\t) on OBJECT | FIELD_DEFINITION\n\n\tenum CacheControlScope {\n\t\tPUBLIC\n\t\tPRIVATE\n\t}\n\t\n\tunion Results = User | Post\n\n  extend type Query {\n    users: [User!]\n    user(id: ID!): User\n    me: User\n\t\tsearch(query: String!): [Results]\n  }\n\n\textend type Mutation {\n\t\tsignUp(\n\t\t\tusername: String!\n\t\t\temail: String!\n\t\t\tpassword: String!\n\t\t): Token!\n\n\t\tsignIn(login: String!, password: String!): Token!\n\n\t\tfollowUser(userId: ID!): Boolean!\n\t\tunfollowUser(userId: ID!): Boolean!\n\n\t\tlikePost(postId: ID!): Boolean!\n\n\t\tupdateAvatar(file: Upload!): Boolean!\n\n\t\tupdateBio(text: String!): Boolean!\n\n\t\tupdateUser(bio: String, name: String, username: String): Boolean!\n\n\t}\n\n\ttype Token {\n\t\ttoken: String!\n\t}\n\n\ttype Relationship {\n\t\tfollower_id: ID!\n\t\tfollowed_id: ID!\n\t}\n\n  type User @cacheControl(maxAge: 240) {\n    id: ID!\n    username: String! \n\t\temail: String! @cacheControl(maxAge: 240)\n\t\tposts(limit: Int, offset: Int): [Post!]\n\t\tposts_count: Int \n\t\tavatar: String\n\t\tbio: String\n    messages: [Message!]\n\t\tfollowing: Boolean\n\t\tfollowing_count: Int\n\t\tfollowers_count: Int\n\t\tfollowers_array: [ID]\n  }\n\n']);

var _apolloServerExpress = require('apollo-server-express');

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

exports.default = (0, _apolloServerExpress.gql)(_templateObject);